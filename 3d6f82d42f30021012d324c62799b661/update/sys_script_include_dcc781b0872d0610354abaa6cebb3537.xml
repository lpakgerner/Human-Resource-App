<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_1327411_hr.ValidateDateFieldsUtils</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>ValidateDateFieldsUtils</name>
        <script><![CDATA[var ValidateDateFieldsUtils = Class.create();
ValidateDateFieldsUtils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    checkDateEntered: function() {

        // Check date to validate it is in the future

        var answer = '';

        // Date selected by User, date/time value, and only date value
        var selectedDateTime = new GlideDateTime(this.getParameter('sysparm_date'));
        var selectedDate = selectedDateTime.getDate();

        // Current date/time, date/time value, and only date value
        var nowDateTime = new GlideDateTime(gs.nowDateTime());
        var nowDate = nowDateTime.getDate();

        // if date entered is before the current date, is the current date, ir is empty, return false;
        if ((selectedDate <= nowDate) || (selectedDate == null)) {
            answer = false;
        } else {
            answer = true;
        }
        return answer;
    },

    checkDateEnteredPast: function() {

        // Check date to validate it is in the past

        var answer = '';

        // Date selected by User, date/time value, and only date value
        var selectedDateTime = new GlideDateTime(this.getParameter('sysparm_date'));
        var selectedDate = selectedDateTime.getDate();

        // Current date/time, date/time value, and only date value
        var nowDateTime = new GlideDateTime(gs.nowDateTime());
        var nowDate = nowDateTime.getDate();

        // if date entered is after the current date, is the current date, or is empty, return false
        if ((selectedDate >= nowDate) || (selectedDate == null)) {
            answer = false;
        } else {
            answer = true;
        }
        return answer;
    },

    checkDateCurrentFuture: function() {

        // Check date to validate it is the current date or in the future

        var answer = "";

        // Date selected by User, date/time value, and only date value
        var selectedDateTime = new GlideDateTime(this.getParameter('sysparm_date'));
        var selectedDate = selectedDateTime.getDate();

        // Current date/time, date/time value, and only date value
        var nowDateTime = new GlideDateTime(gs.nowDateTime());
        var nowDate = nowDateTime.getDate();

        // if date entered is before the current date or is empty, return false
        if ((selectedDate < nowDate) || (selectedDate == null)) {
            answer = false;
        } else {
            answer = true;
        }
        return answer;
    },

    type: 'ValidateDateFieldsUtils'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-04-11 07:12:57</sys_created_on>
        <sys_id>dcc781b0872d0610354abaa6cebb3537</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>ValidateDateFieldsUtils</sys_name>
        <sys_package display_value="Human Resource" source="x_1327411_hr">3d6f82d42f30021012d324c62799b661</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Human Resource">3d6f82d42f30021012d324c62799b661</sys_scope>
        <sys_update_name>sys_script_include_dcc781b0872d0610354abaa6cebb3537</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-04-11 07:24:45</sys_updated_on>
    </sys_script_include>
</record_update>
